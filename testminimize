-- üß† Admin Panel GUI (SPV-style) ‚Äî Made by Siva

if game.CoreGui:FindFirstChild("AdminPanelGUI") then
	game.CoreGui.AdminPanelGUI:Destroy()
end

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local RS = game:GetService("ReplicatedStorage")

-- Conch remotes
local CONCH = RS:WaitForChild("conch_networking", 5)
local INVOKE = CONCH and CONCH:WaitForChild("invoke_server_command", 5)

local INVOKE_ID = {
	spawnbrainrot = 1,
	executeallevents = 1,
	executeevent = 2,
	setmoney = 3,
	setrebirth = 4,
	spawnluckyblock = 5,
}

local function sendInvokeExact(name, args_tbl)
	if not INVOKE then return false, "invoke_remote_not_found" end
	local payload = { invoke_id = INVOKE_ID[name] or 1, name = name, args = args_tbl or {} }
	local ok, err = pcall(function() INVOKE:FireServer(payload) end)
	return ok, ok and "invoke" or tostring(err)
end

local function parseNumber(txt)
	txt = tostring(txt or ""):gsub("[^%d%-%.]", "")
	return tonumber(txt)
end

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "AdminPanelGUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = game.CoreGui

-- Helper functions
local function r(obj, radius)
	local c = Instance.new("UICorner", obj)
	c.CornerRadius = UDim.new(0, radius or 8)
	return c
end

local function padL(obj, amount)
	local p = Instance.new("UIPadding", obj)
	p.PaddingLeft = UDim.new(0, amount or 6)
	return p
end

local function mkButton(parent, text, callback, color)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(1, 0, 0, 28)
	btn.BackgroundColor3 = color or Color3.fromRGB(255, 100, 100)
	btn.Text = text
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 10
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.AutoButtonColor = false
	btn.BorderSizePixel = 0
	r(btn, 6)
	btn.MouseEnter:Connect(function() btn.BackgroundTransparency = 0.2 end)
	btn.MouseLeave:Connect(function() btn.BackgroundTransparency = 0 end)
	btn.MouseButton1Click:Connect(callback)
	return btn
end

local function mkTextBox(parent, placeholder, defaultText)
	local box = Instance.new("TextBox", parent)
	box.Size = UDim2.new(1, 0, 0, 28)
	box.BackgroundColor3 = Color3.fromRGB(28, 30, 38)
	box.Text = defaultText or ""
	box.PlaceholderText = placeholder
	box.PlaceholderColor3 = Color3.fromRGB(100, 110, 130)
	box.TextColor3 = Color3.fromRGB(220, 225, 240)
	box.Font = Enum.Font.Gotham
	box.TextSize = 10
	box.BorderSizePixel = 0
	box.ClearTextOnFocus = false
	r(box, 6)
	padL(box, 8)
	return box
end

local function mkSection(parent, title)
	local section = Instance.new("Frame")
	section.Size = UDim2.new(1, 0, 0, 0)
	section.BackgroundTransparency = 1
	section.AutomaticSize = Enum.AutomaticSize.Y
	section.Parent = parent

	local layout = Instance.new("UIListLayout", section)
	layout.Padding = UDim.new(0, 5)
	layout.SortOrder = Enum.SortOrder.LayoutOrder

	if title then
		local lbl = Instance.new("TextLabel", section)
		lbl.Size = UDim2.new(1, 0, 0, 16)
		lbl.Text = title
		lbl.Font = Enum.Font.GothamBold
		lbl.TextSize = 11
		lbl.TextColor3 = Color3.new(1, 1, 1)
		lbl.BackgroundTransparency = 1
		lbl.LayoutOrder = 0
	end
	return section
end

-- MAIN FRAME
local main = Instance.new("Frame", gui)
main.Size = UDim2.fromOffset(420, 300)
main.Position = UDim2.new(0.5, -210, 0.5, -150)
main.BackgroundColor3 = Color3.fromRGB(18, 20, 26)
main.BorderSizePixel = 0
main.ClipsDescendants = true
r(main, 10)

-- DRAG FUNCTIONALITY
local dragging, dragStart, startPos
titleBar = Instance.new("Frame", main)
titleBar.Size = UDim2.new(1, 0, 0, 35)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 27, 35)
titleBar.BorderSizePixel = 0
r(titleBar, 10)

titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- TITLE
local title = Instance.new("TextLabel", titleBar)
title.Size = UDim2.new(0, 150, 1, 0)
title.Position = UDim2.fromOffset(12, 0)
title.BackgroundTransparency = 1
title.Text = "ADMIN PANEL"
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextColor3 = Color3.new(1, 1, 1)
title.TextXAlignment = Enum.TextXAlignment.Left

-- CLOSE BUTTON
local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Size = UDim2.fromOffset(28, 28)
closeBtn.Position = UDim2.new(1, -32, 0, 3)
closeBtn.Text = "√ó"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = Color3.fromRGB(255, 100, 100)
closeBtn.BackgroundColor3 = Color3.fromRGB(35, 37, 45)
closeBtn.BorderSizePixel = 0
r(closeBtn, 6)
closeBtn.MouseButton1Click:Connect(function() main.Visible = false end)

-- ‚úÖ MINIMIZE BUTTON
local minimizeBtn = Instance.new("TextButton", titleBar)
minimizeBtn.Size = UDim2.fromOffset(28, 28)
minimizeBtn.Position = UDim2.new(1, -68, 0, 3)
minimizeBtn.Text = "‚Äì"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 18
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(35, 37, 45)
minimizeBtn.BorderSizePixel = 0
r(minimizeBtn, 6)

-- SIDE TAB
local sideTab = Instance.new("Frame", main)
sideTab.Size = UDim2.new(0, 120, 1, -35)
sideTab.Position = UDim2.fromOffset(0, 35)
sideTab.BackgroundColor3 = Color3.fromRGB(28, 30, 38)
sideTab.BorderSizePixel = 0
local sideLayout = Instance.new("UIListLayout", sideTab)
sideLayout.Padding = UDim.new(0, 4)
sideLayout.SortOrder = Enum.SortOrder.LayoutOrder
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

local sidePad = Instance.new("UIPadding", sideTab)
sidePad.PaddingTop = UDim.new(0, 8)
sidePad.PaddingLeft = UDim.new(0, 4)
sidePad.PaddingRight = UDim.new(0, 4)

-- CONTENT CONTAINER
local contentContainer = Instance.new("Frame", main)
contentContainer.Size = UDim2.new(1, -120, 1, -35)
contentContainer.Position = UDim2.fromOffset(120, 35)
contentContainer.BackgroundTransparency = 1
contentContainer.BorderSizePixel = 0

-- TAB SYSTEM
local tabBtns, tabFrames = {}, {}

local function createTab(name, order)
	local btn = mkButton(sideTab, name, function()
		for n, f in pairs(tabFrames) do
			f.Visible = false
		end
		for n, b in pairs(tabBtns) do
			b.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
		end
		tabFrames[name].Visible = true
		btn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
	end, Color3.fromRGB(255, 100, 100))
	btn.LayoutOrder = order
	btn.Size = UDim2.new(1, 0, 0, 28)

	local frame = Instance.new("ScrollingFrame", contentContainer)
	frame.Size = UDim2.new(1, -10, 1, -6)
	frame.Position = UDim2.fromOffset(5, 3)
	frame.BackgroundTransparency = 1
	frame.BorderSizePixel = 0
	frame.ScrollBarThickness = 3
	frame.ScrollBarImageColor3 = Color3.fromRGB(88, 101, 242)
	frame.Visible = false

	local layout = Instance.new("UIListLayout", frame)
	layout.Padding = UDim.new(0, 6)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		frame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 6)
	end)

	tabBtns[name] = btn
	tabFrames[name] = frame
	return frame
end

-- CREATE TABS
local spawnerTab = createTab("Brainrot Spawner", 1)
local eventTab = createTab("Execute Events", 2)
local moneyTab = createTab("Add Money", 3)
local rebirthTab = createTab("Set Rebirth", 4)
local luckyTab = createTab("Spawn Lucky Blocks", 5)

-- TAB CONTENTS
do
	local section = mkSection(spawnerTab, "Spawn Brainrots")
	local nameBox = mkTextBox(section, "Pet Name", "Strawberry Elephant")
	local mutBox = mkTextBox(section, "Mutation", "Normal")
	mkButton(section, "SPAWN", function()
		sendInvokeExact("spawnbrainrot", { nameBox.Text, mutBox.Text })
	end)
end

do
	local section = mkSection(eventTab, "Execute Events")
	local eventBox = mkTextBox(section, "Type Event Name")
	mkButton(section, "EXECUTE ALL EVENTS", function()
		sendInvokeExact("executeallevents", {})
	end)
	mkButton(section, "EXECUTE TYPED EVENT", function()
		local typedEvent = eventBox.Text
		if typedEvent == "" then return warn("‚ö†Ô∏è Type an event first") end
		sendInvokeExact("executeevent", { typedEvent })
	end)
end

do
	local section = mkSection(moneyTab, "Add Money")
	local moneyBox = mkTextBox(section, "Money Amount")
	mkButton(section, "ADD MONEY", function()
		local val = parseNumber(moneyBox.Text)
		if not val then return warn("‚ö†Ô∏è Invalid Amount") end
		sendInvokeExact("setmoney", { val })
	end)
end

do
	local section = mkSection(rebirthTab, "Set Rebirth")
	local rebirthBox = mkTextBox(section, "Rebirth Amount")
	mkButton(section, "SET REBIRTH", function()
		local val = parseNumber(rebirthBox.Text)
		if not val then return warn("‚ö†Ô∏è Invalid Amount") end
		sendInvokeExact("setrebirth", { val })
	end)
end

do
	local section = mkSection(luckyTab, "Spawn Lucky Blocks")
	local nameBox = mkTextBox(section, "Block Name", "Secret Lucky Block")
	local mutBox = mkTextBox(section, "Mutation", "Normal")
	mkButton(section, "SPAWN", function()
		sendInvokeExact("spawnluckyblock", { nameBox.Text, mutBox.Text })
	end)
end

tabFrames["Brainrot Spawner"].Visible = true
tabBtns["Brainrot Spawner"].BackgroundColor3 = Color3.fromRGB(255, 100, 100)

-- ‚úÖ MINIMIZE LOGIC
local minimized = false
local fullSize = main.Size

minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		TweenService:Create(main, TweenInfo.new(0.4), { Size = UDim2.new(0, 420, 0, 45) }):Play()
		sideTab.Visible = false
		contentContainer.Visible = false
		title.Text = "ADMIN PANEL (Minimized)"
	else
		TweenService:Create(main, TweenInfo.new(0.4), { Size = fullSize }):Play()
		sideTab.Visible = true
		contentContainer.Visible = true
		title.Text = "ADMIN PANEL"
	end
end)
